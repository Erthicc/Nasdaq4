name: Daily NASDAQ Scan & Publish

on:
  schedule:
    - cron: '30 23 * * 1-5'
  workflow_dispatch: {}

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  worker:
    name: worker-${{ matrix.index }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        index: [0,1,2,3]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      - name: Import check (fail fast)
        run: python -c "import pandas, numpy, yfinance, ta, requests; print('IMPORT OK:', pandas.__version__, numpy.__version__)"

      - name: Download NASDAQ list (best-effort)
        run: |
          python download_nasdaq_list.py || echo "download script failed; worker will attempt fallback"

      - name: Run worker (process chunk)
        env:
          JOB_TOTAL: 4
          JOB_INDEX: ${{ matrix.index }}
        run: |
          echo "Starting worker index=${JOB_INDEX} / total=${JOB_TOTAL}"
          python worker.py

      - name: Upload raw results artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: raw-results-${{ matrix.index }}
          path: raw-results-${{ matrix.index }}.json

  aggregate_and_deploy:
    needs: worker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      - name: Download raw-result artifacts
        uses: actions/download-artifact@v4
        with:
          path: .

      - name: Merge and finalize results
        run: |
          echo "WORKSPACE CONTENTS:"
          ls -la
          echo "Found raw-results files:"
          ls raw-results-*.json || true
          python finalize.py

      - name: Show public/ content (diagnostic)
        run: |
          echo "public/ exists?"; [ -d public ] && echo "yes" || echo "no"
          echo "public/ listing (max 200 lines):"
          ls -la public || true
          find public -maxdepth 2 -type f -print | sed -n '1,200p' || true

      - name: Deploy to GitHub Pages (using PAT)
        id: deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.PAGES_PAT }}
          publish_dir: ./public
          commit_message: "Publish site from GitHub Action - ${{ github.run_number }}"

      - name: Show deploy output & status
        run: |
          echo "Deploy step outcome: ${{ steps.deploy.outcome || 'UNKNOWN' }}"
          echo "Deploy step conclusion: ${{ steps.deploy.conclusion || 'UNKNOWN' }}"
          echo "Pages URL: https://$GITHUB_REPOSITORY_OWNER.github.io/${{ github.event.repository.name }}/"
